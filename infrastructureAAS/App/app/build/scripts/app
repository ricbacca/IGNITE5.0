#!/bin/sh

#
# Copyright © 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

##############################################################################
#
#   app start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
#       noncompliant, but you have some other compliant shell such as ksh or
#       bash, then to run this script, type that shell name before the whole
#       command line, like:
#
#           ksh app
#
#       Busybox and similar reduced shells will NOT work, because this script
#       requires all of these POSIX shell features:
#         * functions;
#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
#         * compound commands having a testable exit status, especially «case»;
#         * various built-in commands including «command», «set», and «ulimit».
#
#   Important for patching:
#
#   (2) This script targets any POSIX shell, so it avoids extensions provided
#       by Bash, Ksh, etc; in particular arrays are avoided.
#
#       The "traditional" practice of packing multiple parameters into a
#       space-separated string is a well documented source of bugs and security
#       problems, so this is (mostly) avoided, by progressively accumulating
#       options in "$@", and eventually passing that to Java.
#
#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
#       and APP_OPTS) rely on word-splitting, this is performed explicitly;
#       see the in-line comments for details.
#
#       There are tweaks for specific operating systems such as AIX, CygWin,
#       Darwin, MinGW, and NonStop.
#
#   (3) This script is generated from the Groovy template
#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
#       within the Gradle project.
#
#       You can find Gradle at https://github.com/gradle/gradle/.
#
##############################################################################

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# This is normally unused
# shellcheck disable=SC2034
APP_BASE_NAME=${0##*/}
# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
APP_HOME=$( cd -P "${APP_HOME:-./}.." > /dev/null && printf '%s\n' "$PWD" ) || exit

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "$( uname )" in                #(
  CYGWIN* )         cygwin=true  ;; #(
  Darwin* )         darwin=true  ;; #(
  MSYS* | MINGW* )  msys=true    ;; #(
  NONSTOP* )        nonstop=true ;;
esac

CLASSPATH=$APP_HOME/lib/app.jar:$APP_HOME/lib/basyx.components.registry-1.4.0.jar:$APP_HOME/lib/basyx.components.AASServer-1.4.0.jar:$APP_HOME/lib/basyx.components.lib-1.4.0.jar:$APP_HOME/lib/basyx.sdk-1.4.0.jar:$APP_HOME/lib/keycloak-admin-client-19.0.3.jar:$APP_HOME/lib/resteasy-jackson2-provider-3.13.2.Final.jar:$APP_HOME/lib/jackson-jaxrs-json-provider-2.14.2.jar:$APP_HOME/lib/jackson-jaxrs-base-2.14.2.jar:$APP_HOME/lib/jackson-module-jaxb-annotations-2.14.2.jar:$APP_HOME/lib/jackson-core-2.14.2.jar:$APP_HOME/lib/jackson-annotations-2.14.2.jar:$APP_HOME/lib/json-patch-1.9.jar:$APP_HOME/lib/jackson-coreutils-1.6.jar:$APP_HOME/lib/jackson-databind-2.14.2.jar:$APP_HOME/lib/jsch-0.1.55.jar:$APP_HOME/lib/fluent-hc-4.5.14.jar:$APP_HOME/lib/logback-classic-1.4.6.jar:$APP_HOME/lib/sdk-client-0.6.8.jar:$APP_HOME/lib/sdk-server-0.6.8.jar:$APP_HOME/lib/javax.servlet-api-4.0.1.jar:$APP_HOME/lib/javax.ws.rs-api-2.1.1.jar:$APP_HOME/lib/jersey-client-2.39.1.jar:$APP_HOME/lib/jersey-hk2-2.39.1.jar:$APP_HOME/lib/tomcat-catalina-9.0.73.jar:$APP_HOME/lib/poi-ooxml-4.1.2.jar:$APP_HOME/lib/janino-3.1.9.jar:$APP_HOME/lib/org.eclipse.paho.client.mqttv3-1.2.5.jar:$APP_HOME/lib/gson-2.10.1.jar:$APP_HOME/lib/commons-fileupload-1.5.jar:$APP_HOME/lib/tika-core-2.7.0.jar:$APP_HOME/lib/resteasy-multipart-provider-3.13.2.Final.jar:$APP_HOME/lib/resteasy-client-3.13.2.Final.jar:$APP_HOME/lib/resteasy-jaxrs-3.13.2.Final.jar:$APP_HOME/lib/commons-io-2.11.0.jar:$APP_HOME/lib/httpmime-4.5.14.jar:$APP_HOME/lib/httpclient-4.5.14.jar:$APP_HOME/lib/commons-lang3-3.12.0.jar:$APP_HOME/lib/spring-security-oauth2-resource-server-5.8.2.jar:$APP_HOME/lib/spring-security-oauth2-jose-5.8.2.jar:$APP_HOME/lib/mongodb-driver-sync-4.9.0.jar:$APP_HOME/lib/spring-data-mongodb-3.4.10.jar:$APP_HOME/lib/commons-logging-1.2.jar:$APP_HOME/lib/logback-core-1.4.6.jar:$APP_HOME/lib/stack-client-0.6.8.jar:$APP_HOME/lib/sdk-core-0.6.8.jar:$APP_HOME/lib/stack-server-0.6.8.jar:$APP_HOME/lib/bsd-generator-0.6.8.jar:$APP_HOME/lib/bsd-core-0.6.8.jar:$APP_HOME/lib/stack-core-0.6.8.jar:$APP_HOME/lib/spring-data-commons-2.7.10.jar:$APP_HOME/lib/HikariCP-3.4.5.jar:$APP_HOME/lib/camunda-engine-7.18.0.jar:$APP_HOME/lib/camunda-engine-dmn-7.18.0.jar:$APP_HOME/lib/camunda-engine-feel-juel-7.18.0.jar:$APP_HOME/lib/camunda-engine-feel-scala-7.18.0.jar:$APP_HOME/lib/camunda-engine-feel-api-7.18.0.jar:$APP_HOME/lib/camunda-commons-typed-values-7.18.0.jar:$APP_HOME/lib/camunda-connect-connectors-all-1.5.6.jar:$APP_HOME/lib/camunda-connect-core-1.5.6.jar:$APP_HOME/lib/camunda-commons-utils-1.12.0.jar:$APP_HOME/lib/camunda-commons-logging-1.12.0.jar:$APP_HOME/lib/feel-engine-1.14.2-scala-shaded.jar:$APP_HOME/lib/slf4j-api-2.0.6.jar:$APP_HOME/lib/jersey-common-2.39.1.jar:$APP_HOME/lib/jakarta.ws.rs-api-2.1.6.jar:$APP_HOME/lib/hk2-locator-2.6.1.jar:$APP_HOME/lib/hk2-api-2.6.1.jar:$APP_HOME/lib/hk2-utils-2.6.1.jar:$APP_HOME/lib/jakarta.inject-2.6.1.jar:$APP_HOME/lib/javassist-3.29.0-GA.jar:$APP_HOME/lib/tomcat-jsp-api-9.0.73.jar:$APP_HOME/lib/tomcat-util-scan-9.0.73.jar:$APP_HOME/lib/tomcat-api-9.0.73.jar:$APP_HOME/lib/tomcat-coyote-9.0.73.jar:$APP_HOME/lib/tomcat-servlet-api-9.0.73.jar:$APP_HOME/lib/tomcat-util-9.0.73.jar:$APP_HOME/lib/tomcat-juli-9.0.73.jar:$APP_HOME/lib/tomcat-annotations-api-9.0.73.jar:$APP_HOME/lib/tomcat-jni-9.0.73.jar:$APP_HOME/lib/tomcat-jaspic-api-9.0.73.jar:$APP_HOME/lib/poi-4.1.2.jar:$APP_HOME/lib/poi-ooxml-schemas-4.1.2.jar:$APP_HOME/lib/commons-compress-1.19.jar:$APP_HOME/lib/curvesapi-1.06.jar:$APP_HOME/lib/commons-compiler-3.1.9.jar:$APP_HOME/lib/httpcore-4.4.16.jar:$APP_HOME/lib/commons-codec-1.13.jar:$APP_HOME/lib/spring-security-oauth2-core-5.8.2.jar:$APP_HOME/lib/spring-security-web-5.8.2.jar:$APP_HOME/lib/spring-security-core-5.8.2.jar:$APP_HOME/lib/spring-tx-5.3.26.jar:$APP_HOME/lib/spring-context-5.3.26.jar:$APP_HOME/lib/spring-web-5.3.25.jar:$APP_HOME/lib/spring-aop-5.3.26.jar:$APP_HOME/lib/spring-beans-5.3.26.jar:$APP_HOME/lib/spring-expression-5.3.26.jar:$APP_HOME/lib/spring-core-5.3.26.jar:$APP_HOME/lib/nimbus-jose-jwt-9.24.4.jar:$APP_HOME/lib/keycloak-core-19.0.3.jar:$APP_HOME/lib/keycloak-common-19.0.3.jar:$APP_HOME/lib/resteasy-jaxb-provider-3.13.2.Final.jar:$APP_HOME/lib/mongodb-driver-core-4.9.0.jar:$APP_HOME/lib/bson-record-codec-4.9.0.jar:$APP_HOME/lib/bson-4.9.0.jar:$APP_HOME/lib/postgresql-42.6.0.jar:$APP_HOME/lib/camunda-bpmn-model-7.18.0.jar:$APP_HOME/lib/h2-2.1.214.jar:$APP_HOME/lib/netty-channel-fsm-0.8.jar:$APP_HOME/lib/netty-codec-http-4.1.77.Final.jar:$APP_HOME/lib/bcpkix-jdk15on-1.69.jar:$APP_HOME/lib/bcutil-jdk15on-1.69.jar:$APP_HOME/lib/bcprov-jdk15on-1.69.jar:$APP_HOME/lib/guava-31.0.1-jre.jar:$APP_HOME/lib/netty-handler-4.1.77.Final.jar:$APP_HOME/lib/netty-codec-4.1.77.Final.jar:$APP_HOME/lib/jaxb-runtime-2.3.6.jar:$APP_HOME/lib/jakarta.annotation-api-1.3.5.jar:$APP_HOME/lib/osgi-resource-locator-1.0.3.jar:$APP_HOME/lib/aopalliance-repackaged-2.6.1.jar:$APP_HOME/lib/tomcat-el-api-9.0.73.jar:$APP_HOME/lib/commons-collections4-4.4.jar:$APP_HOME/lib/commons-math3-3.6.1.jar:$APP_HOME/lib/SparseBitSet-1.2.jar:$APP_HOME/lib/xmlbeans-3.1.0.jar:$APP_HOME/lib/spring-security-crypto-5.8.2.jar:$APP_HOME/lib/jcip-annotations-1.0-1.jar:$APP_HOME/lib/jboss-jaxrs-api_2.1_spec-2.0.1.Final.jar:$APP_HOME/lib/jboss-logging-3.3.2.Final.jar:$APP_HOME/lib/jakarta.mail-1.6.5.jar:$APP_HOME/lib/apache-mime4j-0.6.jar:$APP_HOME/lib/jboss-jaxb-api_2.3_spec-2.0.0.Final.jar:$APP_HOME/lib/spring-jcl-5.3.26.jar:$APP_HOME/lib/checker-qual-3.31.0.jar:$APP_HOME/lib/camunda-cmmn-model-7.18.0.jar:$APP_HOME/lib/mybatis-3.5.6.jar:$APP_HOME/lib/joda-time-2.1.jar:$APP_HOME/lib/camunda-dmn-model-7.18.0.jar:$APP_HOME/lib/camunda-xml-model-7.18.0.jar:$APP_HOME/lib/strict-machine-0.6.jar:$APP_HOME/lib/netty-transport-4.1.77.Final.jar:$APP_HOME/lib/netty-buffer-4.1.77.Final.jar:$APP_HOME/lib/netty-resolver-4.1.77.Final.jar:$APP_HOME/lib/netty-common-4.1.77.Final.jar:$APP_HOME/lib/failureaccess-1.0.1.jar:$APP_HOME/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:$APP_HOME/lib/jakarta.xml.bind-api-2.3.3.jar:$APP_HOME/lib/txw2-2.3.6.jar:$APP_HOME/lib/istack-commons-runtime-3.0.12.jar:$APP_HOME/lib/jakarta.activation-1.2.2.jar:$APP_HOME/lib/reactive-streams-1.0.3.jar:$APP_HOME/lib/jakarta.validation-api-2.0.2.jar:$APP_HOME/lib/jboss-annotations-api_1.3_spec-2.0.1.Final.jar:$APP_HOME/lib/msg-simple-1.1.jar:$APP_HOME/lib/jakarta.activation-api-1.2.2.jar:$APP_HOME/lib/btf-1.2.jar:$APP_HOME/lib/error_prone_annotations-2.7.1.jar:$APP_HOME/lib/j2objc-annotations-1.3.jar


# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    if ! command -v java >/dev/null 2>&1
    then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Increase the maximum file descriptors if we can.
if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
    case $MAX_FD in #(
      max*)
        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        MAX_FD=$( ulimit -H -n ) ||
            warn "Could not query maximum file descriptor limit"
    esac
    case $MAX_FD in  #(
      '' | soft) :;; #(
      *)
        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        ulimit -n "$MAX_FD" ||
            warn "Could not set maximum file descriptor limit to $MAX_FD"
    esac
fi

# Collect all arguments for the java command, stacking in reverse order:
#   * args from the command line
#   * the main class name
#   * -classpath
#   * -D...appname settings
#   * --module-path (only if needed)
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and APP_OPTS environment variables.

# For Cygwin or MSYS, switch paths to Windows format before running java
if "$cygwin" || "$msys" ; then
    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )

    JAVACMD=$( cygpath --unix "$JAVACMD" )

    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    for arg do
        if
            case $arg in                                #(
              -*)   false ;;                            # don't mess with options #(
              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
                    [ -e "$t" ] ;;                      #(
              *)    false ;;
            esac
        then
            arg=$( cygpath --path --ignore --mixed "$arg" )
        fi
        # Roll the args list around exactly as many times as the number of
        # args, so each arg winds up back in the position where it started, but
        # possibly modified.
        #
        # NB: a `for` loop captures its iteration list before it begins, so
        # changing the positional parameters here affects neither the number of
        # iterations, nor the values presented in `arg`.
        shift                   # remove old arg
        set -- "$@" "$arg"      # push replacement arg
    done
fi


# Add default JVM options here. You can also use JAVA_OPTS and APP_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

# Collect all arguments for the java command:
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
#     and any embedded shellness will be escaped.
#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
#     treated as '${Hostname}' itself on the command line.

set -- \
        -classpath "$CLASSPATH" \
        ovs_aas.App \
        "$@"

# Stop when "xargs" is not available.
if ! command -v xargs >/dev/null 2>&1
then
    die "xargs is not available"
fi

# Use "xargs" to parse quoted args.
#
# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
#
# In Bash we could simply go:
#
#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
#   set -- "${ARGS[@]}" "$@"
#
# but POSIX shell has neither arrays nor command substitution, so instead we
# post-process each arg (as a line of input to sed) to backslash-escape any
# character that might be a shell metacharacter, then use eval to reverse
# that process (while maintaining the separation between arguments), and wrap
# the whole thing up as a single "set" statement.
#
# This will of course break if any of these variables contains a newline or
# an unmatched quote.
#

eval "set -- $(
        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $APP_OPTS" |
        xargs -n1 |
        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
        tr '\n' ' '
    )" '"$@"'

exec "$JAVACMD" "$@"
